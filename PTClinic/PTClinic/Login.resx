<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>